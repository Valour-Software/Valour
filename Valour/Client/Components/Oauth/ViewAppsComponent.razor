@inherits Modal<ViewAppsComponent.ModalParams>
@inject OauthService OauthService

<BasicModalLayout Title="Your Applications" Icon="key-fill" MaxWidth="600px">
    <MainArea>
        @if (Apps is null)
        {
            <p>Loading...</p>
        }
        else
        {
            <div class="apps-grid">
                @foreach (var app in Apps)
                {
                    var appN = app;

                    <div class="app" @onclick='@(() => OpenEditApp(appN))'>
                        <img alt="@app.Name Icon" src='@app.ImageUrl' class='app-icon' />
                        <p class='app-name'>@app.Name</p>
                    </div>  
                }
            </div>
        }
    </MainArea>
    <ButtonArea>
        <div class="basic-modal-buttons">
            <button @onclick="@Close" class="v-btn">Close</button>
        </div>
    </ButtonArea>
</BasicModalLayout>

@code 
{
    public class ModalParams {}

    public List<OauthApp> Apps { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Apps = await OauthService.FetchMyOauthAppAsync();
    }

    public void Refresh(){
        StateHasChanged();
    }

    private void OpenEditApp(OauthApp app)
    {
        var data = new EditAppComponent.ModalParams()
        {
            App = app,
            ViewComponent = this
        };
        
        ModalRoot.OpenModal<EditAppComponent>(data);
    }
}

