<div class="v-tab-container">
    <div class="v-tab-header">
        @if (TabOne is not null)
        {
            <div class="v-tab @GetPositionClass(0) @GetActive(0)" @onclick="() => OnClick(0)">
                @if (!string.IsNullOrEmpty(IconOne))
                {
                    <i class="bi bi-@IconOne v-tab-icon"></i>
                }
                <span>@_titleOne</span>
                @if (BadgeOne.HasValue && BadgeOne.Value > 0)
                {
                    <span class="v-tab-badge">@BadgeOne</span>
                }
            </div>
        }
        @if (TabTwo is not null)
        {
            <div class="v-tab @GetPositionClass(1) @GetActive(1)" @onclick="() => OnClick(1)">
                @if (!string.IsNullOrEmpty(IconTwo))
                {
                    <i class="bi bi-@IconTwo v-tab-icon"></i>
                }
                <span>@_titleTwo</span>
                @if (BadgeTwo.HasValue && BadgeTwo.Value > 0)
                {
                    <span class="v-tab-badge">@BadgeTwo</span>
                }
            </div>
        }
        @if (TabThree is not null)
        {
            <div class="v-tab @GetPositionClass(2) @GetActive(2)" @onclick="() => OnClick(2)">
                @if (!string.IsNullOrEmpty(IconThree))
                {
                    <i class="bi bi-@IconThree v-tab-icon"></i>
                }
                <span>@_titleThree</span>
                @if (BadgeThree.HasValue && BadgeThree.Value > 0)
                {
                    <span class="v-tab-badge">@BadgeThree</span>
                }
            </div>
        }
    </div>
    <div class="v-tab-content" style="max-height: @MaxHeight; @ContentStyle">
        @switch (_active)
        {
            case 0:
                @TabOne
                break;
            case 1:
                @TabTwo
                break;
            case 2:
                @TabThree
                break;
        }
    </div>
</div>


@code {

    private string GetActive(int index)
    {
        return index == _active ? "active" : "";
    }
    
    [Parameter]
    public string ContentStyle { get; set; }

    [Parameter]
    public string[] Titles { get; set; }
    
    [Parameter]
    public string MaxHeight { get; set; } = "400px";
    
    [Parameter]
    public string IconOne { get; set; }

    [Parameter]
    public string IconTwo { get; set; }

    [Parameter]
    public string IconThree { get; set; }

    [Parameter]
    public int? BadgeOne { get; set; }

    [Parameter]
    public int? BadgeTwo { get; set; }

    [Parameter]
    public int? BadgeThree { get; set; }

    private string GetPositionClass(int index)
    {
        switch (_tabCount)
        {
            case 1:
                return "first last";
            case 2:
                return index == 0 ? "first" : "last";
            case 3:
                if (index == 0) return "first";
                if (index == 2) return "last";
                return "";
            default:
                return "";
        }
    }

    // Cached so we don't have to keep recalculating
    private string _titleOne = "Tab One";
    private string _titleTwo = "Tab Two";
    private string _titleThree = "Tab Three";

    private string _classOne;
    private string _classTwo;
    private string _classThree;
    
    
    [Parameter]
    public RenderFragment TabOne { get; set; }
    [Parameter]
    public RenderFragment TabTwo { get; set; }
    [Parameter]
    public RenderFragment TabThree { get; set; }

    private int _tabCount;
    private int _active;

    protected override void OnInitialized()
    {
        if (TabOne is not null)
            _tabCount++;
        if (TabTwo is not null)
            _tabCount++;
        if (TabThree is not null)
            _tabCount++;

        if (Titles is not null)
        {
            if (Titles.Length > 0)
                _titleOne = Titles[0];
            if (Titles.Length > 1)
                _titleTwo = Titles[1];
            if (Titles.Length > 2)
                _titleThree = Titles[2];
        }

        switch (_tabCount)
        {
            case 1:
                _classOne = "tab left right";
                break;
            case 2:
                _classOne = "tab left";
                _classTwo = "tab right";
                break;
            case 3:
                _classOne = "tab left";
                _classTwo = "tab";
                _classThree = "tab right";
                break;
        }
    }

    private void OnClick(int index)
    {
        _active = index;
    }

}