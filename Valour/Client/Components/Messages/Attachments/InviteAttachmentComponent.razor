@inherits AttachmentComponent
@inject PlanetService PlanetService

@if (_loading)
{
    <div class="invite-attachment loading">Loading invite...</div>
    return;
}

@if (_errorReason is not null)
{
    <div class="invite-attachment invalid">Error: @_errorReason</div>
    return;
}

<div class="invite-attachment">
    <img class="icon" src="@_imageUrl" alt="@_data.Name icon" @onerror="OnIconError" />
    <span class="name">@_data.Name</span>
    <button class="v-btn" @onclick="OnJoin">Join</button>
</div>


@code {
    private PlanetListInfo _data;

    private bool _loading = true;
    private string? _errorReason;
    private string _code;
    private string _imageUrl;

    protected override async Task OnInitializedAsync()
    {
        _code = Attachment.Location.Split('/').Last();
        
        var result = await PlanetService.FetchInviteScreenDataAsync(_code);
        
        if (!result.Success)
        {
            _errorReason = result.Message;
            return;
        }

        if (result.Data is null)
        {
            _errorReason = "Invite code not found or invalid.";
            return;
        }
        
        _data = result.Data;
        _loading = false;

        _imageUrl = ISharedPlanet.GetIconUrl(_data, IconFormat.Webp256);
        
        StateHasChanged();
    }

    private void OnIconError()
    {
        _imageUrl = "_content/Valour.Client/media/logo/logo-256.webp";
        StateHasChanged();
    }

    private async Task OnJoin()
    {
        if (_loading)
            return;
        
        await ToastContainer.Instance.WaitToastWithTaskResult(new ProgressToastData<TaskResult<PlanetMember>>(
            $"Joining {_data.Name}",
            "...",
            PlanetService.JoinPlanetAsync(_data.PlanetId, _code),
            "Joined successfully!"));
    }
}
