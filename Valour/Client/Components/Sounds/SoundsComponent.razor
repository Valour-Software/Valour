@inject SoundManager SoundManager
@inject IJSRuntime JsRuntime
@inject NotificationService NotificationService

@code {

    protected override bool ShouldRender()
    {
        return false;
    }

    protected override void OnInitialized()
    {
        SoundManager.Component = this;
        NotificationService.NotificationReceived += OnNotification;
    }

    public async Task PlaySound(string name) => 
        await JsRuntime.InvokeVoidAsync("playSound", name, 0.2);


    private async Task OnNotification(Notification notification)
    {
        // Has to be unread for sound to play
        if (notification.TimeRead is null)
        {
            
            // This makes it so if you have the direct message window open,
            // it won't play the sound when you get a message from that channel
            // unless it's a mention
            if (notification.Source == NotificationSource.DirectReply)
            {
                foreach (var window in WindowService.GlobalTabs.Select(x => x.Content)
                             .OfType<WindowContent<ChatWindowComponent, Channel>>())
                {
                    if (window.Data.Id == notification.ChannelId)
                    {
                        return;
                    }
                }
            }
            
            await PlayNotificationSound();
        }
    }

    private async Task PlayNotificationSound()
    {
        await PlaySound("Notification.mp3");
    }
        
}