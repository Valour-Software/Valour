@inherits Modal<AttachmentModal.ModalParams>
@inject IJSRuntime JsRuntime

@if (Data.Attachment is null)
{
    <h5>Loading content...</h5>
    return;
}

<div class="preview-container glassy-modal">
    <div class="attachment-holder">
        @switch (Data.Attachment.Type){
            case MessageAttachmentType.Image:
                <ImageAttachmentComponent Message="Data.Message" Attachment="Data.Attachment" Clickable="false" MaxSize="1000" DoAspect="false" />
                break;
            case MessageAttachmentType.Video:
                <VideoAttachmentComponent Message="Data.Message" Attachment="Data.Attachment" />
                break;
            case MessageAttachmentType.Audio:
                <AudioAttachmentComponent Message="Data.Message" Attachment="Data.Attachment" />
                break;
            default:
                <FileAttachmentComponent Message="Data.Message" Attachment="Data.Attachment" />
                break;
        }
    </div>
    
    <div class="button-row">
        <button class="v-btn" style="float: right" @onclick="@OnClickClose">Close</button>
        <button class="v-btn" style="float: right" @onclick="@OnClickCopyLink">Copy Link</button>
        <button class="v-btn danger" @onclick="@OnClickDownload">Download</button>
    </div>
</div>

@code {

    public class ModalParams
    {
        public Message Message;
        public MessageAttachment Attachment;
    }
    
    private void OnClickClose()
    {
        Close();
    }
    
    private async Task OnClickCopyLink()
    {
        var url = await Data.Attachment.GetSignedUrl(Data.Message.Client, Data.Message.Node);
        await JsRuntime.InvokeVoidAsync("clipboardCopy.copyText", url);
        ToastContainer.Instance.AddToast(new ToastData("Copied!", "Attachment link copied to clipboard", ToastProgressState.Success));
    }

    private async Task OnClickDownload()
    {
        var url = await Data.Attachment.GetSignedUrl(Data.Message.Client, Data.Message.Node);
        await JsRuntime.InvokeVoidAsync("open", url, "_blank");
    }
}