@inject HttpClient Http
@inject ValourClient Client
@inject NavigationManager NavManager

<br />
<div style="margin-bottom: 12%;margin-top:25px;">
    <center><h3>Create Invite</h3></center>
    <center><p>How long will this invite last, in hours. (put 0 to make invite permanent)</p></center>
    <center><input class="form-control" type="number" @bind-value="@hoursValue" style="width:15%;" /></center>

    <center>
        @if (!Failed) {
            <p style="margin-top:10px;">Invite Link: <a href="@nameSpan" class="EnableRightCLick">@nameSpan</a></p>
        }
        else {
            <p style="margin-top:10px;color:red;">@nameSpan</p>
        }
        <br>

        <button class="btn btn-primary mt-2" @onclick="OnSaveChanges">Create Invite</button>
    </center>
</div>

@code {
    [Parameter]
    public Planet Planet { get; set; }

    public int hoursValue;

    public string nameSpan;

    public bool Failed = false;

    protected override Task OnInitializedAsync()
    {
        hoursValue = 0;

        StateHasChanged();
        return Task.CompletedTask;
    }

    public async Task OnSaveChanges()
    {
        var invite = new PlanetInvite(Client)
        {
            PlanetId = Planet.Id,
            IssuerId = Client.Me.Id,
            TimeCreated = DateTime.UtcNow,
            TimeExpires = DateTime.UtcNow.Add(TimeSpan.FromHours(hoursValue)) // TODO: Make this a date picker
        };

        if (hoursValue == 0)
        {
            invite.TimeExpires = null;
        }

        var response = await Planet.Node.PostAsyncWithResponse<PlanetInvite>($"api/invites", invite);

        if (!response.Success)
        {
            nameSpan = response.Message;
            Failed = true;
            StateHasChanged();
            return;
        }

        var link = NavManager.BaseUri.TrimEnd('/') + "/I/" + response.Data.Id;

        nameSpan = link;
        
        Console.WriteLine(link);

        StateHasChanged();
    }

}
