@inject ValourClient Client

<h3>Members <i class="bi bi-person-fill"></i></h3>
<p class="subtitle">MANAGE MEMBERS</p>

<QueryTable
    @ref="_table"
    Node="@Planet.Node"
    TModel="PlanetMember"
    Columns="@_columns"
    Model="@_model"
    ShowSearch="true"
    SearchPlaceholder="Search name..." />

@code {
    [Parameter]
    public Planet Planet { get; set; }

    [CascadingParameter]
    public ModalRoot ModalRoot { get; set; }

    private QueryTable<PlanetMember> _table;
    private List<ColumnDefinition<PlanetMember>> _columns;
    private PlanetMemberQueryModel _model;

    protected override void OnInitialized()
    {
        Planet ??= WindowService.FocusedPlanet;
        _model = new PlanetMemberQueryModel { PlanetId = Planet.Id };

        _columns = new()
        {
            new()
            {
                Name = "Member",
                SortField = "name",
                RenderFragment = row => @<UserInfoComponent Member="@row.Row" />
            },
            new()
            {
                Name = "Role",
                RenderFragment = row => @<span>@row.Row.PrimaryRole?.Name</span>
            },
            new()
            {
                Name = "Actions",
                RenderFragment = row => @<div class="button-row">
                        <button class="v-btn secondary" @onclick="(() => OnKick(row.Row))">Kick</button>
                        <button class="v-btn danger" @onclick="(() => OnBan(row.Row))">Ban</button>
                    </div>
            }
        };
    }

    private void OnKick(PlanetMember member)
    {
        var modalData = new KickModal.KickModalParams { Member = member };
        ModalRoot.OpenModal<KickModal>(modalData);
    }

    private void OnBan(PlanetMember member)
    {
        var modalData = new BanModal.BanModalProps { Member = member };
        ModalRoot.OpenModal<BanModal>(modalData);
    }
}
