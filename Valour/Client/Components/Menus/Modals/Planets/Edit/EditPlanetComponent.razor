@inherits Modal<EditPlanetComponent.ModalParams>
@implements IDisposable
@inject ValourClient Client

@if (Data.Planet is null)
{
    <div class="background">
        <h5>Loading planet details...</h5>
    </div>
    return;
}

<MainMenuComponent
    DefaultCategory="@Data.StartCategory"
    DefaultItem="@Data.StartItem"
    MenuCategories="@_categories" />

@code {
    public class ModalParams
    {
        public Planet Planet;
        public string StartCategory;
        public string StartItem;
    }

    private List<MainMenu.MenuCategory> _categories;

    // RenderFragments for each menu item
    private RenderFragment InfoContent => @<EditPlanetInfoComponent Planet="@Data.Planet" />;
    private RenderFragment InvitesContent => @<EditPlanetInvitesComponent Planet="@Data.Planet" />;
    private RenderFragment MembersContent => @<EditPlanetUsersComponent />;
    private RenderFragment BansContent => @<EditPlanetBansComponent />;
    private RenderFragment RolesContent => @<EditPlanetRolesComponent Planet="@Data.Planet" />;
    private RenderFragment EconomyContent => @<EditPlanetEconomyComponent Planet="@Data.Planet" />;
    private RenderFragment DeleteContent => @<div></div>;

    protected override void OnInitialized()
    {
        // Fallback on focused planet if no planet is provided
        if (Data is null || Data.Planet is null)
        {
            Data = new ModalParams()
            {
                Planet = WindowService.FocusedPlanet
            };
        }

        _categories = BuildCategories();
    }

    private List<MainMenu.MenuCategory> BuildCategories() =>
        new List<MainMenu.MenuCategory>()
        {
            new MainMenu.MenuCategory()
            {
                Name = "General Settings",
                Icon = "gear-fill",
                Items = new List<MainMenu.MenuItem>()
                {
                    new MainMenu.MenuItem()
                    {
                        Name = "Info",
                        Icon = "info-circle-fill",
                        Description = "Edit planet information",
                        Content = InfoContent
                    },
                    new MainMenu.MenuItem()
                    {
                        Name = "Invites",
                        Icon = "envelope-paper-heart-fill",
                        Description = "Manage planet invites",
                        Content = InvitesContent
                    },
                    new MainMenu.MenuItem()
                    {
                        Name = "Members",
                        Icon = "person-heart",
                        Description = "Manage planet members",
                        Content = MembersContent
                    },
                    new MainMenu.MenuItem()
                    {
                        Name = "Bans",
                        Icon = "sign-stop-lights-fill",
                        Description = "Manage bans",
                        Content = BansContent
                    },
                    new MainMenu.MenuItem()
                    {
                        Name = "Roles",
                        Icon = "person-fill",
                        Description = "Manage roles and permissions",
                        Content = RolesContent
                    },
                    new MainMenu.MenuItem()
                    {
                        Name = "Economy",
                        Icon = "rocket-takeoff-fill",
                        Description = "Manage planet economy",
                        Content = EconomyContent
                    },
                    new MainMenu.MenuItem()
                    {
                        Name = "Delete",
                        Icon = "x-octagon-fill",
                        Color = "var(--p-red)",
                        Description = "Delete this planet",
                        Content = DeleteContent,
                        OnClick = OnClickDelete
                    }
                }
            }
        };

    public void Dispose()
    {

    }

    private async Task OnClickDelete()
    {
        var modalData = new ConfirmModalComponent.ModalParams(
            $"Delete {Data.Planet.Name}?",
            "Are you sure?",
            "Continue",
            "Cancel",
            async () =>
            {
                Console.WriteLine("Confirmed planet deletion.");
                var result = await Data.Planet.DeleteAsync();

                if (result.Success)
                {
                    Close();
                }
            },
            () => Task.CompletedTask
        );

        ModalRoot.OpenModal<ConfirmModalComponent>(modalData);
    }
}
