@inject ValourClient Client

<div class="settings-container">
    <div class="editor-section">
        <h3 class="editor-section-title">
            <i class="bi bi-envelope-paper-heart"></i>
            Planet Invitations
        </h3>
        <p class="subtitle">Control how users join your planet</p>

        <div class="form-group">
            <label>
                <input type="checkbox" @oninput="OnCheckPublic" checked="@publicValue" />
                Public
            </label>
            <p class="helper-text">Allow anyone to join via an invite link</p>
            <ResultLabel Result="@publicResult" />
        </div>

        <div class="form-group">
            <label>
                <input type="checkbox" @oninput="OnCheckDiscoverable" checked="@discoverableValue" />
                Discoverable
            </label>
            <p class="helper-text">Public planets can appear in discovery</p>
            <ResultLabel Result="@discoverableResult" />
        </div>

        <div class="form-group">
            <label>
                <input type="checkbox" @oninput="OnCheckNsfw" checked="@nsfwValue" />
                Not Safe For Work
            </label>
            <p class="helper-text">NSFW planets will not show on discovery</p>
            <ResultLabel Result="@nsfwResult" />
        </div>

        <TabContainerComponent Titles="@TabTitles">
            <TabOne>
                <SimpleTable TItem="PlanetInvite"
                             Items="Planet.Invites"
                             Headers="@TableHeaders"
                             RowTemplate="InviteRow"
                             EmptyText="No invites yet"
                             EmptyIcon="envelope" />
            </TabOne>
            <TabTwo>
                <div class="empty-state">
                    <i class="bi bi-person-slash"></i>
                    <span>No invited users</span>
                </div>
            </TabTwo>
        </TabContainerComponent>

        <CreateInviteLink Planet="Planet" />
    </div>
</div>

@code {
    [Parameter]
    public Planet Planet { get; set; }

    public bool publicValue;

    private ITaskResult publicResult;

    public bool discoverableValue;

    private ITaskResult discoverableResult;
    
    public bool nsfwValue;
    
    private ITaskResult nsfwResult;

    private static readonly string[] TabTitles = new[] { "Invite Links", "Invited Users" };
    private static readonly string[] TableHeaders = new[] { "Invite Code", "Created By", "Created", "Expires" };

    private RenderFragment<PlanetInvite> InviteRow => invite => @<PlanetInviteComponent Invite="@invite" />;


    protected override async Task OnInitializedAsync()
    {
        publicValue = Planet.Public;
        discoverableValue = Planet.Discoverable;
        nsfwValue = Planet.Nsfw;
        Planet.Invites.Changed += OnPlanetInvitesChange;
        await Planet.LoadInvitesAsync();
    }

    public void Dispose()
    {
        Planet.Invites.Changed -= OnPlanetInvitesChange;
    }

    public void OnPlanetInvitesChange(IModelEvent<PlanetInvite> eventData)
    {
        StateHasChanged();
    }

    public async Task OnCheckPublic()
    {
        publicValue = !publicValue;

        Planet.Public = publicValue;
        publicResult = await Planet.UpdateAsync();

        if (!publicResult.Success)
        {
            publicValue = !Planet.Public;
        }

        StateHasChanged();
    }

    public async Task OnCheckDiscoverable()
    {
        discoverableValue = !discoverableValue;

        Planet.Discoverable = discoverableValue;
        discoverableResult = await Planet.UpdateAsync();

        if (!discoverableResult.Success)
        {
            discoverableValue = !Planet.Discoverable;
        }

        StateHasChanged();
    }
    
    public async Task OnCheckNsfw()
    {
        nsfwValue = !nsfwValue;

        Planet.Nsfw = nsfwValue;
        nsfwResult = await Planet.UpdateAsync();

        if (!nsfwResult.Success)
        {
            nsfwValue = !Planet.Nsfw;
        }

        StateHasChanged();
    }

}