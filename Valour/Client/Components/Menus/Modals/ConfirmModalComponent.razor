@inherits Modal<ConfirmModalComponent.ModalParams>

<!-- This modal exists to allow parts of the app to ask for confirmation -->

<BasicModalLayout Title="@Data.Title" Icon="question-circle-fill" MaxWidth="400px">
    <MainArea>
        <p>@Data.Description</p>
    </MainArea>
    <ButtonArea>
        <div class="basic-modal-buttons">
            <button @onclick="@OnCancel" class="v-btn">@Data.CancelText</button>
            <button @onclick="@OnConfirm" class="v-btn danger">@Data.ConfirmText</button>
        </div>
    </ButtonArea>
</BasicModalLayout>

@code {

	public class ModalParams
	{
		/// <summary>
		/// Run if the user hits "confirm"
		/// </summary>
		public Func<Task> ConfirmEvent;

		/// <summary>
		/// Run if the user hits "cancel"
		/// </summary>
		public Func<Task> CancelEvent;

		// Cosmetics
		public string Title;
		public string Description;
		public string ConfirmText;
		public string CancelText;

		public ModalParams()
		{
			
		}

		public ModalParams(string title, string desc, string confirm, string cancel, Func<Task> OnConfirm, Func<Task> OnCancel)
		{
			Title = title;
			Description = desc;
			ConfirmText = confirm;
			CancelText = cancel;

			ConfirmEvent = OnConfirm;
			CancelEvent = OnCancel;
		}
	}

	private async Task OnConfirm()
	{
		Close();
		
		if (Data.ConfirmEvent is not null)
			await Data.ConfirmEvent.Invoke();
	}

	private async Task OnCancel()
	{
		Close();
		
		if (Data.CancelEvent is not null)
			await Data.CancelEvent.Invoke();
	}
}
