@inherits Modal<ErrorModal.ModalParams>
@inject IJSRuntime JsRuntime

<BasicModalLayout Title="@($"Error Details {CodeText}")" Icon="bug-fill" MaxWidth="600px">
    <MainArea>
        <p class="subtitle">Send to us... or maybe <a href="https://github.com/Valour-Software/Valour">contribute?</a></p>
        <pre class="error-details">
            @(Data.Result.Details ?? "No details available")
        </pre>
    </MainArea>
    <ButtonArea>
        <div class="basic-modal-buttons">
            <button @onclick="@OnClickCopyAsync" class="v-btn">Copy Details</button>
            <button @onclick="@OnClickClose" class="v-btn">Close</button>
        </div>
    </ButtonArea>
</BasicModalLayout>

@code {
    public class ModalParams
    {
        public ITaskResult Result;
    }
    
    private string CodeText =>
        Data.Result.Code is null ? "" : $"({Data.Result.Code})";

    private void OnClickClose() => Close();
    
    private async Task OnClickCopyAsync()
    {
        await JsRuntime.InvokeVoidAsync("clipboardCopy.copyText", Data.Result.Details);
        ToastContainer.Instance.AddToast(new ToastData("Copied!", "Error details copied to clipboard", ToastProgressState.Success));
    }
}