@inherits Modal<InfoModalComponent.ModalParams>

<!-- This modal exists to allow parts of the app to give the user info -->

<BasicModalLayout Title="@Data.Title" Icon="info-circle-fill" MaxWidth="400px">
    <MainArea>
        <p>@Data.Description</p>
    </MainArea>
    <ButtonArea>
        <div class="basic-modal-buttons">
            <button @onclick="@OnClick" class="v-btn primary">@Data.ButtonText</button>
        </div>
    </ButtonArea>
</BasicModalLayout>

@code {

	public class ModalParams
	{

		/// <summary>
		/// Run if the user hits the button
		/// </summary>
		public readonly Func<Task> ButtonEvent;

		// Cosmetics
		public readonly string Title;
		public readonly string Description;
		public readonly string ButtonText;

		public ModalParams()
		{
			
		}

		public ModalParams(string title, string desc, string button, Func<Task> OnClick)
		{
			this.Title = title;
			this.Description = desc;
			this.ButtonText = button;

			this.ButtonEvent = OnClick;
		}
	}

    private async Task OnClick()
	{
	    if (Data.ButtonEvent is not null)
			await Data.ButtonEvent.Invoke();

	    ModalRoot.CloseModal(ModalId);
	}
}