@inject ValourClient Client
@inherits Modal<BanModal.BanModalProps>

<div class="col-md-12">
	<section class="glassy-modal" style="text-align: center; padding: 30px">
		<h3><i class="bi bi-hammer"></i> Ban @Data.Member.Nickname?</h3>
		<label style="font-size: 1.2em">This will remove them from the planet and prevent them from rejoining.</label>
		<br />
		<UserInfoComponent Member="@Data.Member" 
		                   Style="
		                   background-color: var(--main-3); 
		                   display: inline-block; 
		                   border-radius: 0.5em; 
		                   padding-right: 0.5em;
						   scale: 1.5;
						   margin-top: 1.5em;
						   margin-bottom: 2em" />
		<br />
		
		<div class="form-group">
			<label>Reason (Optional)</label>
			<input type="text" class="form-control" @bind-value="@_reason"/>
		</div>
		
		<br />
		
		<div class="form-group">
			<label>Time in Minutes (0 or empty for permanent)</label>
			<InputNumber class="form-control" TValue="@int" @bind-Value="@_unbanMinutes"></InputNumber>
        </div>
		
		<br />
		
		<div class="btn-wrapper">
			<button @onclick="@OnCancel" class="btn v-btn d-inline-block">Cancel </button>
			<button @onclick="@OnConfirm" class="btn v-btn danger d-inline-block">Confirm</button>
		</div>
		
		<ResultLabel Result="@_result" Style="margin-top: 1em; margin-bottom: 0" />
	</section>
</div>


@code {

	private string _reason;
	private int _unbanMinutes;
	
	private ITaskResult _result;
	
    public class BanModalProps
    {
        public PlanetMember Member;
    }
	
	private async Task OnConfirm()
	{
		var expires = DateTime.UtcNow;
		if (_unbanMinutes > 0)
			expires = expires.AddMinutes(_unbanMinutes);

		var reason = _reason;
		if (string.IsNullOrWhiteSpace(reason))
			reason = $"Banned by ${Client.Me.NameAndTag}";
		
		var ban = new PlanetBan(Client)
		{
			PlanetId = Data.Member.PlanetId,
			TargetId = Data.Member.UserId,
			IssuerId = Client.Me.Id,
			TimeExpires = expires,
			TimeCreated = DateTime.UtcNow,
			Reason = reason
		};

		_result = await ban.CreateAsync();
		
		if (_result.Success)
		{
			Close();
		}
		
		StateHasChanged();
	}
	
	private void OnCancel()
	{
		Close();
	}
}