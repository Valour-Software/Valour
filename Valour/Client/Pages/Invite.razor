@page "/I/{InviteCode}"

@inject NavigationManager NavManager
@inject ValourClient Client
@inject PlanetService PlanetService

<body class="login-background" style="background-image: url('_content/Valour.Client/media/Abstract-Background.png')">
    <div class="popup-box">
        <div class="col-md-12">
            <section class="text-center">

                @if (_inviteDataResult is null)
                {
                    <h2>Loading...</h2>
                }
                else if (!_inviteDataResult.Value.Success)
                {
                    <ResultLabel Result="@_inviteDataResult"/>
                    <button class="v-btn center mt-4" @onclick="OnClose">Back to Home</button>
                }
                else
                {
                    if (!Client.IsLoggedIn)
                    {
                        <p class="m-4">Log in or register to join this planet</p>
                        <button class="v-btn blue large mt-2" @onclick="OnClickLogin">Log in and Join</button>
                        <button class="v-btn blue large mt-2" @onclick="OnClickRegister">Register and Join</button>
                    }
                    else
                    {
                        <h2 class="mb-4">Join a Planet:</h2>
                        <DiscoveryPlanetCard PlanetInfo="@_inviteDataResult.Value.Data"/>
                    }
                }
            </section>
        </div>
    </div>
</body>

@code {

    [Parameter]
    public string InviteCode {get; set;}
    
    private TaskResult<PlanetListInfo>? _inviteDataResult;
    private bool _alreadyJoined = false;

    protected override async  Task OnInitializedAsync()
    {
        _inviteDataResult = await PlanetService.FetchInviteScreenDataAsync(InviteCode);
        
        // Already joined
        if (_inviteDataResult.HasValue &&
            _inviteDataResult.Value.Data is not null &&
            PlanetService.JoinedPlanets.Any(x => x.Id == _inviteDataResult.Value.Data.PlanetId))
        {
            _alreadyJoined = true;
        }

        StateHasChanged();

    }

    public async Task OnClose()
    {
        await PlanetService.FetchJoinedPlanetsAsync();
        NavManager.NavigateTo("/");
    }

    private void OnClickLogin()
    {
        NavManager.NavigateTo($"/?redirect=/i/{InviteCode}", true);
    }

    private void OnClickRegister()
    {
        NavManager.NavigateTo($"/register/i/{InviteCode}", true);
    }

    private async Task OnClickJoin()
    {
        if (_inviteDataResult.HasValue && _inviteDataResult.Value.Data is not null)
        {
            var result = await ToastContainer.Instance.WaitToastWithResult(new ProgressToastData<TaskResult<PlanetMember>>()
            {
                ProgressTask = PlanetService.JoinPlanetAsync(_inviteDataResult.Value.Data.PlanetId, InviteCode),
                Title = "Joining Planet",
                Message = "Landing rocket ship..."
            });

            StateHasChanged();
        }
    }
}
