@inherits ContextMenu<PlanetContextMenu.PlanetContextParams>
@inject IJSRuntime JsRuntime
@inject ValourClient Client
@inject PlanetService PlanetService

@if (_canEdit)
{
    <ContextMenuItem OnClickAsync='@OnClickEdit'>
        <Label>Edit</Label>
        <Icon><i class="bi bi-pen-fill"></i></Icon>
    </ContextMenuItem>
}
<ContextMenuItem OnClickAsync='@OnClickCopyId'>
    <Label>Copy ID</Label>
    <Icon><i class="bi bi-database-fill"></i></Icon>
</ContextMenuItem>

@if (Client.Me.Id != Data.Planet.OwnerId)
{
    <ContextMenuItem OnClickAsync='@OnClickLeavePlanet' Color="red">
        <Label>Leave Planet</Label>
        <Icon><i class="bi bi-box-arrow-left"></i></Icon>
    </ContextMenuItem>
}

@code {

    public class PlanetContextParams
    {
        public Planet Planet;
    }

    [CascadingParameter]
    public ModalRoot ModalRoot { get; set; }

    private static bool _canEdit;
    
    protected override void OnInitialized()
    {
        _canEdit = Data.Planet.MyMember?.HasPermission(PlanetPermissions.Manage) ?? false;
        StateHasChanged();
    }

    private async Task OnClickEdit()
    {
        await CloseAsync();
        
        var data = new EditPlanetComponent.ModalParams()
        {
            Planet = Data.Planet
        };
        
        ModalRoot.OpenModal<EditPlanetComponent>(data);
    }

    private async Task OnClickCopyId()
    {
        await JsRuntime.InvokeVoidAsync("clipboardCopy.copyText", Data.Planet.Id);
        ToastContainer.Instance.AddToast(new ToastData("Copied!", "Planet ID copied to clipboard", ToastProgressState.Success));
    }

    private async Task OnClickLeavePlanet()
    {
        await CloseAsync();
        
        var modalData =
        new ConfirmModalComponent.ModalParams(
             $"Leave {Data.Planet.Name}?",
             "Are you sure?",
             "Continue",
             "Cancel",
             async () =>
             {
                 var result = await ToastContainer.Instance.WaitToastWithTaskResult(new ProgressToastData<TaskResult>(
                    $"Leaving {Data.Planet.Name}",
                    "Removing membership...",
                    PlanetService.LeavePlanetAsync(Data.Planet),
                    "Left planet successfully!"
                 ));
                 
                 Console.WriteLine("Confirmed leaving planet.");
                 Console.WriteLine("Leave: " + result.Message);
             },
             () => Task.CompletedTask
        );
        
        ModalRoot.OpenModal<ConfirmModalComponent>(modalData);
    }
}
